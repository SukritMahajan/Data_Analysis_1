#set directory 
setwd("/Users/sukritmahajan/Desktop/RNA_Seq_Analysis")
getwd()

#load packages required for visualization
library(ggplot2)
library(cowplot)
library(plotly)

#import dataset
df <- read.csv("DESeq_res_OAP_IP_X_vs_AP_IP_X_repfilt.csv", header=TRUE)

#viewing dataset in the script area as a table
View(df)

#check if the dataset has been imported properly
head(df)

#filter missing values = NA 
df.filtered <- na.omit(df)

#View filtered data in script area and check if the filtration was proper. 
View(df.filtered)      
head(df.filtered)
class(df.filtered$log2FoldChange)

#Plotting the filtered dataset 
plot_df.filtered<- ggplot(df.filtered, aes(x=log10(baseMean), y=log2FoldChange, color=pvalue <0.01)) + geom_point(size=0.001) + theme_cowplot(12)
plot_df.filtered

#Filter the dataset on the basis of positive and negative log2FoldChange values
df.pos<- filter(df.filtered, log2FoldChange > 0, pvalue <0.01 | pvalue==0.01)
df.neg<- filter(df.filtered, log2FoldChange < 0, pvalue <0.01 | pvalue==0.01)

#Viewing the new dataset based on the filtration by log2FoldChange
View(df.pos)
View(df.neg)

head(df.pos)
head(df.neg)

#Plotting of new datasets based on the filtration by log2FoldChange
plot_df.pos <- ggplot(df.pos, aes(x=log10(baseMean), y=log2FoldChange, color=pvalue)) + geom_point(size=0.001) + theme_cowplot(12)
plot_df.pos

plot_df.neg <- ggplot(df.neg, aes(x=log10(baseMean), y=log2FoldChange, color=pvalue)) + geom_point(size=0.001) + theme_cowplot(12)
plot_df.neg

#installing hg19 genome for reference
install.packages("TxDb.Hsapiens.UCSC.hg19.knownGene")
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene

library(GenomicRanges)
df.pos.gr <- GRanges(X=c(df.pos$X),name=c(df.pos$name),seqnames=c(df.pos$seqnames),
                     ranges=IRanges(start=c(df.pos$start),
                                    end=c(df.pos$end)),
                     strand=c(df.pos$strand), score=c(df.pos$score), baseMean=c(df.pos$baseMean), 
                     log2FoldChange=c(df.pos$log2FoldChange), pvalue=c(df.pos$pvalue)
                     )

#increasing stringency to remove false positives
df.pos.new <- filter(df.filtered, log2FoldChange > 0 & log2FoldChange <6 & pvalue <= 0.01)
plot_df.pos.new <- ggplot(df.pos.new, aes(x=log10(baseMean), y=log2FoldChange, color=pvalue)) + geom_point(size=0.001) + theme_cowplot(12)
plot_df.pos.new

df.pos.new.gr <- GRanges(X=c(df.pos$X),name=c(df.pos$name),seqnames=c(df.pos$seqnames),
                     ranges=IRanges(start=c(df.pos$start),
                                    end=c(df.pos$end)),
                     strand=c(df.pos$strand), score=c(df.pos$score), baseMean=c(df.pos$baseMean), 
                     log2FoldChange=c(df.pos$log2FoldChange), pvalue=c(df.pos$pvalue)
)

df.pos.new.gr

#Finding how many G4s are present on sense and anti-sense strand

G4_antisense <- count(filter(df.pos.new, strand=="-"))
G4_antisense

G4_sense <- count(filter(df.pos.new, strand=="+"))
G4_sense

#              **********************End of filtration of data and conversion to GRanges********************

#Annotation of G4 in the genome

#Installing and loading of packages

install.packages("ChIPseeker")
library(ChIPseeker)

#G4 at site of oxidative damage = G4s in different chromosomes associated with enriched 8-oxoG sites
covplot(df.pos.new.gr, weightCol="baseMean")

#G4s binding to TSS regions (Used Chipseeker package)

#TSS regions defined as flanking sequence of the TSS sites
promoter <- getPromoters(TxDb=txdb, upstream=1000, downstream=1000)

#Alignment of G4s to TSS regions.
tagMatrix <- getTagMatrix(df.pos.new.gr, windows=promoter)

#Visualization of G4s associated with TSS regions 
G4_TSS.heatmap <- tagHeatmap(tagMatrix, xlim=c(-1000, 1000), color="red")
G4_TSS.heatmap

#Average Profile of G4s binding to TSS region

G4_Avg_TSS <- plotAvgProf(tagMatrix, xlim=c(-1000, 1000),
            xlab="Genomic Region (5'->3')", ylab = "Read Count Frequency") + 
            theme_cowplot(12)
G4_Avg_TSS

#To find the break-up of genomic locations of G4 overlapping enriched 8-oxoG
G4_Anno <- annotatePeak(df.pos.new.gr, tssRegion=c(-1000, 1000),
                         TxDb=txdb, annoDb="org.Hs.eg.db")
plotAnnoPie(G4_Anno)

#Using upsetplot function to show distribution of G4 across the genome
install.packages("ggupset")
install.packages("ggplotify")
install.packages("ggimage")

library(ggupset)
library(ggplotify)
library(ggimage)

upsetplot(G4_Anno, vennpie=TRUE)  #vennpie has been included in the code; not required

#Distribution of G4 relative to TSS

plotDistToTSS(G4_Anno, title="Distribution of G4 relative to TSS")

#Gene Enrichment Analysis

#installing clusterProfiler for Gene Ontology and KEGG enrichment analysis.
install.packages("clusterProfiler")
if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install("clusterProfiler")
library(clusterProfiler)

gene <- seq2gene(df.pos.new.gr, tssRegion = c(-1000, 1000), flankDistance = 500, TxDb=txdb)
pathway2 <- enrichPathway(gene)
head(pathway2)

dotplot(pathway2, orderBy="x") + theme_cowplot(12)


#         ***************** End of Annotation of G4 for 8-oxoG enriched sites******************
